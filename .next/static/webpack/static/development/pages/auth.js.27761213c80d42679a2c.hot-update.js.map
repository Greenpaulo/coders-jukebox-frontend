{"version":3,"file":"static/webpack/static\\development\\pages\\auth.js.27761213c80d42679a2c.hot-update.js","sources":["webpack:///./pages/auth.js"],"sourcesContent":["import {useRef, useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n// import withApollo from 'next-with-apollo';\r\n// import withApollo from '../lib/withApollo';\r\n\r\n\r\n\r\nconst Auth = () => {\r\n\r\n  // Connect to our global state\r\n  // const { login } = useContext(GlobalContext);\r\n  // console.log(context)\r\n  \r\n  // Create refs\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  \r\n  const submitHandler = (e, context) => {\r\n    e.preventDefault();\r\n    console.log('submit handler called')\r\n    console.log(context)\r\n    // console.log(context);\r\n    \r\n    // const email = emailRef.current.value;\r\n    // const password = passwordRef.current.value;\r\n\r\n    // if (email.trim().length === 0 || password.trim().length === 0){\r\n    //   return;\r\n    // }\r\n\r\n    // Call action creator to fetch a token from the API and change the global state using a reducer\r\n    // context.login(email, password);\r\n\r\n    // console.log(email, password);\r\n\r\n  };\r\n  \r\n  return (\r\n    <GlobalContext.Consumer>\r\n      {context => (\r\n\r\n      <section id=\"auth\" className=\"container\">\r\n        <h1>Login</h1>\r\n        <form onSubmit={(e) => submitHandler(e, context)}>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" ref={emailRef}/>\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" ref={passwordRef}/>\r\n          </div>\r\n          <button type=\"submit\">Login</button>\r\n\r\n        </form>\r\n\r\n\r\n        <style jsx>{`\r\n\r\n        h1 {\r\n          font-size: 2rem;\r\n        }\r\n      \r\n        .form-control {\r\n          margin: 1.5rem 0;\r\n        }\r\n\r\n        input {\r\n          padding: 0.2rem;\r\n        }\r\n\r\n        label {\r\n          display: block;\r\n          font-size: 1.2rem;\r\n        }\r\n\r\n        button {\r\n          color: white;\r\n          padding: 0.5rem 1rem ;\r\n          border-radius: 5px;\r\n          font-size: 1rem;\r\n          background-color: #3cbc3e;\r\n          border: none;\r\n          cursor: pointer;\r\n        }\r\n\r\n        button:hover {\r\n          background-color: #42af44;\r\n        }\r\n        \r\n\r\n      `}</style>\r\n      \r\n      </section>\r\n      )}\r\n\r\n    </GlobalContext.Consumer>\r\n  )\r\n};\r\n\r\n// export default withApollo(Auth);\r\nexport default Auth;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAFA;AA2DA;AACA;AACA;AACA;;;;A","sourceRoot":""}