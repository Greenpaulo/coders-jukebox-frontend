{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.c64797b75fc8eebbb6ba.hot-update.js","sources":["webpack:///./context/GlobalState.js"],"sourcesContent":["import { createContext, useReducer} from 'react';\r\nimport gql from 'graphql-tag';\r\nimport AppReducer from './AppReducer';\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\n// Inital State\r\nconst initialState = {\r\n  authenticated: false,\r\n  authData: null,\r\n  user: null,\r\n  video: null,\r\n  comment: null\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n  \r\n  const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n  // Actions\r\n  const login = (email, password) => {\r\n\r\n    // Make a API query to get a token\r\n    const LOGIN_QUERY = gql`\r\n      query LoginQuery{\r\n        login(email: ${email}, password: ${password}) {\r\n          userId,\r\n          token\r\n        }\r\n      }\r\n    `;\r\n    const { data } = useQuery(LOGIN_QUERY);\r\n\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      payload: {\r\n        data\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{\r\n      authenticated: state.authenticated,\r\n      login\r\n    }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAJA;AAAA;AACA;AAYA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;A","sourceRoot":""}