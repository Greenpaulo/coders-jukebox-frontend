{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\MyProjects\\\\coders-jukebox-frontend\\\\pages\\\\auth.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState'; // import withApollo from 'next-with-apollo';\n// import withApollo from '../lib/withApollo';\n\nconst Auth = () => {\n  // Create refs\n  const emailRef = useRef();\n  const passwordRef = useRef(); // Handle login form submit\n\n  const submitHandler = (e, context) => {\n    e.preventDefault();\n    console.log('submit handler called'); // console.log(context)\n    // Get credentials from refs\n\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value; // Check if email or password is empty\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    } // Call login action to fetch a token from the API and change the global state\n\n\n    context.login(email, password);\n  };\n\n  return __jsx(GlobalContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, context => __jsx(\"section\", {\n    id: \"auth\",\n    className: \"jsx-2603344331\" + \" \" + \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-2603344331\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Login\"), __jsx(\"form\", {\n    onSubmit: e => submitHandler(e, context),\n    className: \"jsx-2603344331\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-2603344331\" + \" \" + \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    className: \"jsx-2603344331\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    ref: emailRef,\n    className: \"jsx-2603344331\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"jsx-2603344331\" + \" \" + \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    className: \"jsx-2603344331\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    ref: passwordRef,\n    className: \"jsx-2603344331\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"jsx-2603344331\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Login\")), __jsx(_JSXStyle, {\n    id: \"2603344331\",\n    __self: this\n  }, \"h1.jsx-2603344331{font-size:2rem;}.form-control.jsx-2603344331{margin:1.5rem 0;}input.jsx-2603344331{padding:0.2rem;}label.jsx-2603344331{display:block;font-size:1.2rem;}button.jsx-2603344331{color:white;padding:0.5rem 1rem;border-radius:5px;font-size:1rem;background-color:#3cbc3e;border:none;cursor:pointer;}button.jsx-2603344331:hover{background-color:#42af44;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxDb2RpbmdcXE15UHJvamVjdHNcXGNvZGVycy1qdWtlYm94LWZyb250ZW5kXFxwYWdlc1xcYXV0aC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrRG9CLEFBSTBCLEFBSUMsQUFJRCxBQUlELEFBS0YsQUFVYSxZQVRKLEVBTEosQ0FabkIsQUFRQSxDQUpBLFNBdUJBLE1BZEEsQ0FLb0Isa0JBQ0gsZUFDVSx5QkFDYixZQUNHLGVBQ2pCIiwiZmlsZSI6IkM6XFxDb2RpbmdcXE15UHJvamVjdHNcXGNvZGVycy1qdWtlYm94LWZyb250ZW5kXFxwYWdlc1xcYXV0aC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dXNlUmVmLCB1c2VDb250ZXh0fSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IEdsb2JhbENvbnRleHQgfSBmcm9tICcuLi9jb250ZXh0L0dsb2JhbFN0YXRlJztcclxuLy8gaW1wb3J0IHdpdGhBcG9sbG8gZnJvbSAnbmV4dC13aXRoLWFwb2xsbyc7XHJcbi8vIGltcG9ydCB3aXRoQXBvbGxvIGZyb20gJy4uL2xpYi93aXRoQXBvbGxvJztcclxuXHJcbmNvbnN0IEF1dGggPSAoKSA9PiB7XHJcbiAgXHJcbiAgLy8gQ3JlYXRlIHJlZnNcclxuICBjb25zdCBlbWFpbFJlZiA9IHVzZVJlZigpO1xyXG4gIGNvbnN0IHBhc3N3b3JkUmVmID0gdXNlUmVmKCk7XHJcbiAgXHJcbiAgLy8gSGFuZGxlIGxvZ2luIGZvcm0gc3VibWl0XHJcbiAgY29uc3Qgc3VibWl0SGFuZGxlciA9IChlLCBjb250ZXh0KSA9PiB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBjb25zb2xlLmxvZygnc3VibWl0IGhhbmRsZXIgY2FsbGVkJylcclxuICAgIC8vIGNvbnNvbGUubG9nKGNvbnRleHQpXHJcbiAgICBcclxuICAgIC8vIEdldCBjcmVkZW50aWFscyBmcm9tIHJlZnNcclxuICAgIGNvbnN0IGVtYWlsID0gZW1haWxSZWYuY3VycmVudC52YWx1ZTtcclxuICAgIGNvbnN0IHBhc3N3b3JkID0gcGFzc3dvcmRSZWYuY3VycmVudC52YWx1ZTtcclxuXHJcbiAgICAvLyBDaGVjayBpZiBlbWFpbCBvciBwYXNzd29yZCBpcyBlbXB0eVxyXG4gICAgaWYgKGVtYWlsLnRyaW0oKS5sZW5ndGggPT09IDAgfHwgcGFzc3dvcmQudHJpbSgpLmxlbmd0aCA9PT0gMCl7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDYWxsIGxvZ2luIGFjdGlvbiB0byBmZXRjaCBhIHRva2VuIGZyb20gdGhlIEFQSSBhbmQgY2hhbmdlIHRoZSBnbG9iYWwgc3RhdGVcclxuICAgIGNvbnRleHQubG9naW4oZW1haWwsIHBhc3N3b3JkKTtcclxuICB9O1xyXG4gIFxyXG4gIHJldHVybiAoXHJcbiAgICA8R2xvYmFsQ29udGV4dC5Db25zdW1lcj5cclxuICAgICAge2NvbnRleHQgPT4gKFxyXG5cclxuICAgICAgPHNlY3Rpb24gaWQ9XCJhdXRoXCIgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XHJcbiAgICAgICAgPGgxPkxvZ2luPC9oMT5cclxuICAgICAgICA8Zm9ybSBvblN1Ym1pdD17KGUpID0+IHN1Ym1pdEhhbmRsZXIoZSwgY29udGV4dCl9PlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIj5cclxuICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJlbWFpbFwiPkVtYWlsPC9sYWJlbD5cclxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJlbWFpbFwiIGlkPVwiZW1haWxcIiByZWY9e2VtYWlsUmVmfS8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCI+XHJcbiAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwicGFzc3dvcmRcIj5QYXNzd29yZDwvbGFiZWw+XHJcbiAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicGFzc3dvcmRcIiBpZD1cInBhc3N3b3JkXCIgcmVmPXtwYXNzd29yZFJlZn0vPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIj5Mb2dpbjwvYnV0dG9uPlxyXG5cclxuICAgICAgICA8L2Zvcm0+XHJcblxyXG5cclxuICAgICAgICA8c3R5bGUganN4PntgXHJcblxyXG4gICAgICAgIGgxIHtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgIC5mb3JtLWNvbnRyb2wge1xyXG4gICAgICAgICAgbWFyZ2luOiAxLjVyZW0gMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlucHV0IHtcclxuICAgICAgICAgIHBhZGRpbmc6IDAuMnJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxhYmVsIHtcclxuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBidXR0b24ge1xyXG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgcGFkZGluZzogMC41cmVtIDFyZW0gO1xyXG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzNjYmMzZTtcclxuICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGJ1dHRvbjpob3ZlciB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDJhZjQ0O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuXHJcbiAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgXHJcbiAgICAgIDwvc2VjdGlvbj5cclxuICAgICAgKX1cclxuXHJcbiAgICA8L0dsb2JhbENvbnRleHQuQ29uc3VtZXI+XHJcbiAgKVxyXG59O1xyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgd2l0aEFwb2xsbyhBdXRoKTtcclxuZXhwb3J0IGRlZmF1bHQgQXV0aDsiXX0= */\\n/*@ sourceURL=C:\\\\\\\\Coding\\\\\\\\MyProjects\\\\\\\\coders-jukebox-frontend\\\\\\\\pages\\\\\\\\auth.js */\")));\n}; // export default withApollo(Auth);\n\n\nexport default Auth;","map":{"version":3,"sources":["C:/Coding/MyProjects/coders-jukebox-frontend/pages/auth.js"],"names":["useRef","useContext","GlobalContext","Auth","emailRef","passwordRef","submitHandler","e","context","preventDefault","console","log","email","current","value","password","trim","length","login"],"mappings":";;;;AAAA,SAAQA,MAAR,EAAgBC,UAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,wBAA9B,C,CACA;AACA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAEjB;AACA,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;AACA,QAAMK,WAAW,GAAGL,MAAM,EAA1B,CAJiB,CAMjB;;AACA,QAAMM,aAAa,GAAG,CAACC,CAAD,EAAIC,OAAJ,KAAgB;AACpCD,IAAAA,CAAC,CAACE,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAFoC,CAGpC;AAEA;;AACA,UAAMC,KAAK,GAAGR,QAAQ,CAACS,OAAT,CAAiBC,KAA/B;AACA,UAAMC,QAAQ,GAAGV,WAAW,CAACQ,OAAZ,CAAoBC,KAArC,CAPoC,CASpC;;AACA,QAAIF,KAAK,CAACI,IAAN,GAAaC,MAAb,KAAwB,CAAxB,IAA6BF,QAAQ,CAACC,IAAT,GAAgBC,MAAhB,KAA2B,CAA5D,EAA8D;AAC5D;AACD,KAZmC,CAcpC;;;AACAT,IAAAA,OAAO,CAACU,KAAR,CAAcN,KAAd,EAAqBG,QAArB;AACD,GAhBD;;AAkBA,SACE,MAAC,aAAD,CAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,OAAO,IAER;AAAS,IAAA,EAAE,EAAC,MAAZ;AAAA,wCAA6B,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAM,IAAA,QAAQ,EAAGD,CAAD,IAAOD,aAAa,CAACC,CAAD,EAAIC,OAAJ,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,EAAE,EAAC,OAAvB;AAA+B,IAAA,GAAG,EAAEJ,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA,wCAAe,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,EAAE,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAEC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CAFF;AAAA;AAAA;AAAA,8rIAHF,CADF;AA6DD,CAtFD,C,CAwFA;;;AACA,eAAeF,IAAf","sourcesContent":["import {useRef, useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n// import withApollo from 'next-with-apollo';\r\n// import withApollo from '../lib/withApollo';\r\n\r\nconst Auth = () => {\r\n  \r\n  // Create refs\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  \r\n  // Handle login form submit\r\n  const submitHandler = (e, context) => {\r\n    e.preventDefault();\r\n    console.log('submit handler called')\r\n    // console.log(context)\r\n    \r\n    // Get credentials from refs\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    // Check if email or password is empty\r\n    if (email.trim().length === 0 || password.trim().length === 0){\r\n      return;\r\n    }\r\n\r\n    // Call login action to fetch a token from the API and change the global state\r\n    context.login(email, password);\r\n  };\r\n  \r\n  return (\r\n    <GlobalContext.Consumer>\r\n      {context => (\r\n\r\n      <section id=\"auth\" className=\"container\">\r\n        <h1>Login</h1>\r\n        <form onSubmit={(e) => submitHandler(e, context)}>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" ref={emailRef}/>\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" ref={passwordRef}/>\r\n          </div>\r\n          <button type=\"submit\">Login</button>\r\n\r\n        </form>\r\n\r\n\r\n        <style jsx>{`\r\n\r\n        h1 {\r\n          font-size: 2rem;\r\n        }\r\n      \r\n        .form-control {\r\n          margin: 1.5rem 0;\r\n        }\r\n\r\n        input {\r\n          padding: 0.2rem;\r\n        }\r\n\r\n        label {\r\n          display: block;\r\n          font-size: 1.2rem;\r\n        }\r\n\r\n        button {\r\n          color: white;\r\n          padding: 0.5rem 1rem ;\r\n          border-radius: 5px;\r\n          font-size: 1rem;\r\n          background-color: #3cbc3e;\r\n          border: none;\r\n          cursor: pointer;\r\n        }\r\n\r\n        button:hover {\r\n          background-color: #42af44;\r\n        }\r\n        \r\n\r\n      `}</style>\r\n      \r\n      </section>\r\n      )}\r\n\r\n    </GlobalContext.Consumer>\r\n  )\r\n};\r\n\r\n// export default withApollo(Auth);\r\nexport default Auth;"]},"metadata":{},"sourceType":"module"}