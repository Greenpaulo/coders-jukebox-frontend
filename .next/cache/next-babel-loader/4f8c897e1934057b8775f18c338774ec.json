{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useReducer } from 'react'; // import gql from 'graphql-tag';\n\nimport AppReducer from './AppReducer'; // import { useQuery } from '@apollo/react-hooks';\n// Inital State\n\nvar initialState = {\n  authenticated: false,\n  authData: null,\n  user: null,\n  video: null,\n  comment: null\n}; // Create context\n\nexport var GlobalContext = createContext(initialState); // Provider Component\n\nexport var GlobalProvider = function GlobalProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(AppReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Actions\n\n\n  var login = function login(email, password) {\n    // Make a API query to get a token\n    // const LOGIN_QUERY = gql`\n    //   query LoginQuery{\n    //     login(email: ${email}, password: ${password}) {\n    //       userId,\n    //       token\n    //     }\n    //   }\n    // `;\n    // const { data } = useQuery(LOGIN_QUERY);\n    dispatch({\n      type: 'LOGIN',\n      payload: {\n        data: data\n      }\n    });\n  };\n\n  return __jsx(GlobalContext.Provider, {\n    value: {\n      authenticated: state.authenticated,\n      login: login\n    }\n  }, children);\n};","map":null,"metadata":{},"sourceType":"module"}