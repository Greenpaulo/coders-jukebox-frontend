{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Coding\\\\MyProjects\\\\coders-jukebox-frontend\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import { GlobalProvider } from '../context/GlobalState';\nimport { GlobalContext, GlobalProvider } from '../context/GlobalState'; // import { login } from '../context/Actions';\n// import { login } from '../context/Actions';\n\nimport Layout from '../components/Layout';\nimport { useState } from 'react';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState({\n    authenticated: false,\n    authData: null,\n    user: null,\n    video: null,\n    comment: null\n  }),\n      state = _useState[0],\n      setState = _useState[1]; // Auth actions\n\n\n  var login = function login(email, password) {\n    console.log('login function called from actions');\n    setState(_objectSpread({}, state, {\n      authenticated: !state.authenticated\n    }));\n    console.log(state.authenticated); // Make a API query to get a token\n    // const LOGIN_QUERY = gql`\n    //   query LoginQuery{\n    //     login(email: ${email}, password: ${password}) {\n    //       userId,\n    //       token\n    //     }\n    //   }\n    // `;\n    // const { data } = useQuery(LOGIN_QUERY);\n  };\n\n  return __jsx(GlobalContext.Provider, {\n    value: {\n      // login: actions.login\n      login: login\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Coding/MyProjects/coders-jukebox-frontend/pages/_app.js"],"names":["GlobalContext","GlobalProvider","Layout","useState","MyApp","Component","pageProps","authenticated","authData","user","video","comment","state","setState","login","email","password","console","log"],"mappings":";;;;;;;;;;AAAA;AACA,SAASA,aAAT,EAAwBC,cAAxB,QAA8C,wBAA9C,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAIA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBAEbH,QAAQ,CAAC;AACjCI,IAAAA,aAAa,EAAE,KADkB;AAEjCC,IAAAA,QAAQ,EAAE,IAFuB;AAGjCC,IAAAA,IAAI,EAAE,IAH2B;AAIjCC,IAAAA,KAAK,EAAE,IAJ0B;AAKjCC,IAAAA,OAAO,EAAE;AALwB,GAAD,CAFK;AAAA,MAEhCC,KAFgC;AAAA,MAEzBC,QAFyB,iBAWvC;;;AACA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAEjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAL,IAAAA,QAAQ,mBAAKD,KAAL;AAAYL,MAAAA,aAAa,EAAE,CAACK,KAAK,CAACL;AAAlC,OAAR;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACL,aAAlB,EAJiC,CAOjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,GAlBD;;AAsBA,SACE,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC7B;AACAO,MAAAA,KAAK,EAAEA;AAFsB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeR,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAJF,CADF;AAUD;;AAED,eAAeF,KAAf","sourcesContent":["// import { GlobalProvider } from '../context/GlobalState';\r\nimport { GlobalContext, GlobalProvider } from '../context/GlobalState';\r\n// import { login } from '../context/Actions';\r\n// import { login } from '../context/Actions';\r\nimport Layout from '../components/Layout';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n\r\n  const [state, setState] = useState({\r\n    authenticated: false,\r\n    authData: null,\r\n    user: null,\r\n    video: null,\r\n    comment: null\r\n  });\r\n\r\n\r\n  // Auth actions\r\n  const login = (email, password) => {\r\n\r\n    console.log('login function called from actions');\r\n    setState({...state, authenticated: !state.authenticated});\r\n    console.log(state.authenticated);\r\n\r\n\r\n    // Make a API query to get a token\r\n    // const LOGIN_QUERY = gql`\r\n    //   query LoginQuery{\r\n    //     login(email: ${email}, password: ${password}) {\r\n    //       userId,\r\n    //       token\r\n    //     }\r\n    //   }\r\n    // `;\r\n    // const { data } = useQuery(LOGIN_QUERY);\r\n\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <GlobalContext.Provider value={{\r\n      // login: actions.login\r\n      login: login\r\n    }}>\r\n      <Layout>\r\n        <Component {...pageProps} />\r\n      </Layout>\r\n    </GlobalContext.Provider>\r\n  )\r\n}\r\n\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}