{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\MyProjects\\\\coders-jukebox-frontend\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { GlobalContext, GlobalProvider } from '../context/GlobalState'; // import { login } from '../context/Actions';\n\nimport Layout from '../components/Layout';\nimport { useState } from 'react'; // import gql from 'graphql-tag';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: authState,\n    1: setAuthState\n  } = useState({\n    authenticated: false,\n    authData: null\n  });\n  const {\n    0: userState,\n    1: setUserState\n  } = useState({\n    user: null\n  });\n  const {\n    0: videoState,\n    1: setVideoState\n  } = useState({\n    video: null\n  });\n  const {\n    0: commentState,\n    1: setCommentState\n  } = useState({\n    comment: null\n  }); // Auth actions\n\n  const login = (email, password) => {// Make a API query to get a token\n    // const LOGIN_QUERY = gql`\n    //   query LoginQuery{\n    //     login(email: ${email}, password: ${password}) {\n    //       userId,\n    //       token\n    //     }\n    //   }\n    // `;\n    // const { data } = useQuery(LOGIN_QUERY);\n  };\n\n  return __jsx(GlobalContext.Provider, {\n    value: {\n      authState,\n      userState,\n      videoState,\n      commentState,\n      login\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Coding/MyProjects/coders-jukebox-frontend/pages/_app.js"],"names":["GlobalContext","GlobalProvider","Layout","useState","MyApp","Component","pageProps","authState","setAuthState","authenticated","authData","userState","setUserState","user","videoState","setVideoState","video","commentState","setCommentState","comment","login","email","password"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,cAAxB,QAA8C,wBAA9C,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;AAKA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AAEvC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BL,QAAQ,CAAC;AACzCM,IAAAA,aAAa,EAAE,KAD0B;AAEzCC,IAAAA,QAAQ,EAAE;AAF+B,GAAD,CAA1C;AAKA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC;AACzCU,IAAAA,IAAI,EAAE;AADmC,GAAD,CAA1C;AAIA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BZ,QAAQ,CAAC;AAC3Ca,IAAAA,KAAK,EAAE;AADoC,GAAD,CAA5C;AAIA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCf,QAAQ,CAAC;AAC/CgB,IAAAA,OAAO,EAAE;AADsC,GAAD,CAAhD,CAfuC,CAoBvC;;AACA,QAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAEjC;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,GAhBD;;AAuBA,SACE,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC7Bf,MAAAA,SAD6B;AAE7BI,MAAAA,SAF6B;AAG7BG,MAAAA,UAH6B;AAI7BG,MAAAA,YAJ6B;AAK7BG,MAAAA;AAL6B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAed,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAPF,CADF;AAaD;;AAED,eAAeF,KAAf","sourcesContent":["import { GlobalContext, GlobalProvider } from '../context/GlobalState';\r\n// import { login } from '../context/Actions';\r\nimport Layout from '../components/Layout';\r\nimport { useState } from 'react';\r\n\r\n// import gql from 'graphql-tag';\r\n\r\n\r\n\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n\r\n  const [authState, setAuthState] = useState({\r\n    authenticated: false,\r\n    authData: null\r\n  });\r\n\r\n  const [userState, setUserState] = useState({\r\n    user: null\r\n  });\r\n\r\n  const [videoState, setVideoState] = useState({\r\n    video: null\r\n  });\r\n\r\n  const [commentState, setCommentState] = useState({\r\n    comment: null\r\n  });\r\n\r\n\r\n  // Auth actions\r\n  const login = (email, password) => {\r\n\r\n    // Make a API query to get a token\r\n    \r\n\r\n\r\n    // const LOGIN_QUERY = gql`\r\n    //   query LoginQuery{\r\n    //     login(email: ${email}, password: ${password}) {\r\n    //       userId,\r\n    //       token\r\n    //     }\r\n    //   }\r\n    // `;\r\n    // const { data } = useQuery(LOGIN_QUERY);\r\n\r\n  }\r\n\r\n  \r\n\r\n  \r\n  \r\n  \r\n  return (\r\n    <GlobalContext.Provider value={{\r\n      authState,\r\n      userState,\r\n      videoState,\r\n      commentState,\r\n      login\r\n    }}>\r\n      <Layout>\r\n        <Component {...pageProps} />\r\n      </Layout>\r\n    </GlobalContext.Provider>\r\n  )\r\n}\r\n\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}