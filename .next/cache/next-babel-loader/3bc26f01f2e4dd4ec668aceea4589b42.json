{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Coding\\\\MyProjects\\\\coders-jukebox-frontend\\\\context\\\\GlobalState.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { createContext, useReducer } from 'react';\nimport gql from 'graphql-tag';\nimport AppReducer from './AppReducer'; // Inital State\n\nvar initialState = {\n  authenticated: false,\n  user: null,\n  video: null,\n  comment: null\n}; // Create context\n\nexport var GlobalContext = createContext(initialState); // Provider Component\n\nexport var GlobalProvider = function GlobalProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(AppReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Actions\n\n\n  var login = function login(email, password) {\n    // Make a API query to get a token\n    var loginQuery = gql(_templateObject());\n    dispatch({\n      type: 'LOGIN',\n      payload: {\n        user: user\n      }\n    });\n  };\n\n  return __jsx(GlobalContext.Provider, {\n    value: {\n      isLoggedIn: state.isLoggedIn\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Coding/MyProjects/coders-jukebox-frontend/context/GlobalState.js"],"names":["createContext","useReducer","gql","AppReducer","initialState","authenticated","user","video","comment","GlobalContext","GlobalProvider","children","state","dispatch","login","email","password","loginQuery","type","payload","isLoggedIn"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB,C,CAOA;;AACA,OAAO,IAAMC,aAAa,GAAGT,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBACpBV,UAAU,CAACE,UAAD,EAAaC,YAAb,CADU;AAAA,MACvCQ,KADuC;AAAA,MAChCC,QADgC,mBAG9C;;;AACA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAEjC;AACA,QAAMC,UAAU,GAAGf,GAAH,mBAAhB;AAEAW,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,OADC;AAEPC,MAAAA,OAAO,EAAE;AACPb,QAAAA,IAAI,EAAJA;AADO;AAFF,KAAD,CAAR;AAMD,GAXD;;AAaA,SACE,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC7Bc,MAAAA,UAAU,EAAER,KAAK,CAACQ;AADW,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGT,QAHH,CADF;AAOD,CAxBM","sourcesContent":["import { createContext, useReducer} from 'react';\r\nimport gql from 'graphql-tag';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Inital State\r\nconst initialState = {\r\n  authenticated: false,\r\n  user: null,\r\n  video: null,\r\n  comment: null\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n  // Actions\r\n  const login = (email, password) => {\r\n\r\n    // Make a API query to get a token\r\n    const loginQuery = gql``\r\n\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      payload: {\r\n        user\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{\r\n      isLoggedIn: state.isLoggedIn\r\n    }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}