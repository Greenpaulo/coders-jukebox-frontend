{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\MyProjects\\\\coders-jukebox-frontend\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n// import gql from 'graphql-tag';\n// import { useQuery } from '@apollo/react-hooks';\n// import withApollo from '../lib/withApollo';\n// import { getDataFromTree } from '@apollo/react-ssr';\n// import Layout from '../components/Layout';\n// const VIDEOS_QUERY = gql`\n//   query VideosQuery{\n//     videos {\n//       title\n//     }\n//   }\n// `;\nconst Index = () => {\n  // const { loading, data } = useQuery(VIDEOS_QUERY);\n  // if (loading || !data) {\n  //   return <h1>loading...</h1>;\n  // }\n  return (// <Layout>\n    __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, \"Home\")) // </Layout>\n\n  );\n}; // export default withApollo(Index);\n\n\nexport default Index; // You can also override the configs for withApollo here, so if you want\n// this page to have SSR (and to be a lambda) for SEO purposes and remove\n// the loading state, uncomment the import at the beginning and this:\n//\n// export default withApollo(Index, { getDataFromTree });","map":{"version":3,"sources":["C:/Coding/MyProjects/coders-jukebox-frontend/pages/index.js"],"names":["Index"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,KAAK,GAAG,MAAM;AAClB;AAEA;AACA;AACA;AACA,SACE;AACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAFJ,CASE;;AATF;AAWD,CAjBD,C,CAmBA;;;AACA,eAAeA,KAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import gql from 'graphql-tag';\r\n// import { useQuery } from '@apollo/react-hooks';\r\n// import withApollo from '../lib/withApollo';\r\n// import { getDataFromTree } from '@apollo/react-ssr';\r\n// import Layout from '../components/Layout';\r\n\r\n// const VIDEOS_QUERY = gql`\r\n//   query VideosQuery{\r\n//     videos {\r\n//       title\r\n//     }\r\n//   }\r\n// `;\r\n\r\nconst Index = () => {\r\n  // const { loading, data } = useQuery(VIDEOS_QUERY);\r\n\r\n  // if (loading || !data) {\r\n  //   return <h1>loading...</h1>;\r\n  // }\r\n  return (\r\n    // <Layout>\r\n      <div className=\"container\">\r\n      <h1>Home</h1>\r\n        {/* {data.videos.map(video => (\r\n          <h3 key={video.id}>{video.title}</h3>\r\n        ))} */}\r\n      </div>\r\n\r\n    // </Layout>\r\n  )\r\n};\r\n\r\n// export default withApollo(Index);\r\nexport default Index;\r\n\r\n// You can also override the configs for withApollo here, so if you want\r\n// this page to have SSR (and to be a lambda) for SEO purposes and remove\r\n// the loading state, uncomment the import at the beginning and this:\r\n//\r\n// export default withApollo(Index, { getDataFromTree });"]},"metadata":{},"sourceType":"module"}